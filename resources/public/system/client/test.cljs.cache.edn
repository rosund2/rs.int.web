;; Analyzed by ClojureScript 1.7.10
{:use-macros nil, :excludes #{}, :name system.client.test, :imports {XhrIo goog.net.XhrIo, EventType goog.events.EventType}, :requires {dom om.dom, EventType goog.events.EventType, om.dom om.dom, events goog.events, XhrIo goog.net.XhrIo, om.core om.core, om om.core, cljs.reader cljs.reader, goog.events goog.events, reader cljs.reader}, :uses nil, :defs {t9558 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/t9558, :file "src-cljs\\system\\client\\test.cljs", :type true, :anonymous true, :column nil, :line nil, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9561 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/t9561, :file "src-cljs\\system\\client\\test.cljs", :type true, :anonymous true, :column nil, :line nil, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, middle-name {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([{:keys [middle middle-initial]}]))}, :name system.client.test/middle-name, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 18, :method-params ([p__9569]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [middle middle-initial]}]))}, ->t9552 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contacts-view data owner meta9553])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/->t9552, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :method-params ([contacts-view data owner meta9553]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column nil, :factory :positional, :line nil, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contacts-view data owner meta9553])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, contacts-view {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([data owner]))}, :name system.client.test/contacts-view, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 20, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, contact-view {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 40, :column 7, :end-line 40, :end-column 19, :arglists (quote ([contact owner]))}, :name system.client.test/contact-view, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 19, :method-params ([contact owner]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([contact owner]))}, edn-xhr {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 73, :column 7, :end-line 73, :end-column 14, :arglists (quote ([{:keys [method url data on-complete]}]))}, :name system.client.test/edn-xhr, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 14, :method-params ([p__9574]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [method url data on-complete]}]))}, ->t9561 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contact-view contact owner meta9562])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/->t9561, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :method-params ([contact-view contact owner meta9562]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column nil, :factory :positional, :line nil, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contact-view contact owner meta9562])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9558 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contact-view contact owner meta9559])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/->t9558, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :method-params ([contact-view contact owner meta9559]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column nil, :factory :positional, :line nil, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contact-view contact owner meta9559])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9552 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/t9552, :file "src-cljs\\system\\client\\test.cljs", :type true, :anonymous true, :column nil, :line nil, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name system.client.test/app-state, :file "src-cljs\\system\\client\\test.cljs", :line nil, :column nil, :end-line 12, :end-column 15, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 12, :column 6, :end-line 12, :end-column 15}}, t9555 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/t9555, :file "src-cljs\\system\\client\\test.cljs", :type true, :anonymous true, :column nil, :line nil, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, meths {:name system.client.test/meths, :file "src-cljs\\system\\client\\test.cljs", :line nil, :column nil, :end-line 67, :end-column 11, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 67, :column 6, :end-line 67, :end-column 11}}, on-js-reload {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 87, :column 7, :end-line 87, :end-column 19, :arglists (quote ([]))}, :name system.client.test/on-js-reload, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 87, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-name {:protocol-inline nil, :meta {:file "C:\\Dev\\rs.system\\src-cljs\\system\\client\\test.cljs", :line 52, :column 7, :end-line 52, :end-column 19, :arglists (quote ([{:keys [first last], :as contact}]))}, :name system.client.test/display-name, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :end-column 19, :method-params ([p__9564]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [first last], :as contact}]))}, ->t9555 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contacts-view data owner meta9556])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name system.client.test/->t9555, :variadic false, :file "src-cljs\\system\\client\\test.cljs", :method-params ([contacts-view data owner meta9556]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column nil, :factory :positional, :line nil, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contacts-view data owner meta9556])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:email :get :middle-initial :contacts :method :delete :url :post :middle :target :first :put :arglists :last :on-complete :data}, :order [:contacts :first :last :email :middle-initial :middle :arglists :target :get :put :post :delete :method :url :data :on-complete]}, :doc nil}